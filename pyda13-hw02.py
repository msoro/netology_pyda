# Задание 1
# Дана переменная, в которой хранится слово из латинских букв. Напишите код, который выводит на экран:
# среднюю букву, если число букв в слове НЕчетное (ошибка в задании на сайте);
# две средних буквы, если число букв (не)четное (ЧЕТНОЕ).
# Примеры работы программы:
# word = 'test’
# Результат:
# es
# word = 'testing’
# Результат:
# t
word = str(input('Введите слово: '))
med = len(word) // 2
if len(word) % 2 == 0:
    print(word[med - 1:med + 1])
else:
    print(word[med])
print('Конец программы')

# ---------------------------------------------------------#
# Задание 2
# Напишите программу, которая последовательно запрашивает у пользователя числа (по одному за раз)
# и после первого нуля выводит сумму всех ранее введенных чисел.
digit = int(input('Введите число: '))
summ = 0
while digit != 0:
    summ += digit
    digit = int(input('Введите число: '))
print('Результат: ', summ)
print('Конец программы')

# ---------------------------------------------------------#
# Задание 3
# Мы делаем MVP dating-сервиса, и у нас есть список парней и девушек.
# Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем имена по алфавиту
# и познакомим людей с одинаковыми индексами после сортировки!
# Но мы не будем никого знакомить, если кто-то может остаться без пары:
# Примеры работы программы:
#
# boys = [‘Peter’, ‘Alex’, ‘John’, ‘Arthur’, ‘Richard’]
# girls = [‘Kate’, ‘Liza’, ‘Kira’, ‘Emma’, ‘Trisha’]
# Результат:
# Идеальные пары:
# Alex и Emma
# Arthur и Kate
# John и Kira
# Peter и Liza
# Richard и Trisha
# boys = [‘Peter’, ‘Alex’, ‘John’, ‘Arthur’, ‘Richard’, ‘Michael’]
# girls = [‘Kate’, ‘Liza’, ‘Kira’, ‘Emma’, ‘Trisha’]
# Результат:
# Внимание, кто-то может остаться без пары!

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
# boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard', 'Michael']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
print('Результат:')
if len(boys) == len(girls):
    boys_s = sorted(boys)
    girls_s = sorted(girls)
    print('Идеальные пары:')
    i = 0
    while i <= len(boys):
        print(boys_s[i], 'и', girls_s[i])
        i = i + 1
else:
    print('Внимание, кто-то может остаться без пары!')
# ---------------------------------------------------------#
# Задание 3 через кортежи
# Задание 3 через кортежи
boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
# boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard', 'Michael']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
print('Результат:')
if len(boys) == len(girls):
    boys_s = sorted(boys)
    girls_s = sorted(girls)
    ideal = list(zip(boys_s, girls_s))
    print('Идеальные пары:')
    for pair in ideal:
        print(pair[0], 'и', pair[1])
else:
    print('Внимание, кто-то может остаться без пары!')

# ---------------------------------------------------------#
# Задание 4
# У нас есть список, содержащий информацию о среднедневной температуре в Фаренгейтах за произвольный период
# по странам (структура данных в примере). Необходимо написать код, который рассчитает среднюю температуру
# за период в Цельсиях(!) для каждой страны.

countries_temperature = [
    ['Thailand', [75.2, 77, 78.8, 73.4, 68, 75.2, 77]],
    ['Germany', [57.2, 55.4, 59, 59, 53.6]],
    ['Russia', [35.6, 37.4, 39.2, 41, 42.8, 39.2, 35.6]],
    ['Poland', [50, 50, 53.6, 57.2, 55.4, 55.4]]
]

print('Результат:')
print('Средняя температура в странах:')
for country in countries_temperature:
    l = len(country[1])
    mid = (sum(country[1])) / l
    cel = (mid - 32) * 5 / 9
    print(country[0], '-', round(cel, 1), 'C')

# Результат:
# Средняя температура в странах:
# Thailand - 23.9 С
# Germany - 13.8 С
# Russia - 3.7 С
# Poland - 12.0 С


# ---------------------------------------------------------#
# Задание 5 (необязательное)
# Дан поток логов по количеству просмотренных страниц для каждого пользователя.
# Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя.
# Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей.
# Примеры работы программы:
stream = [
'2018-01-01,user1,3',
'2018-01-07,user1,4',
'2018-03-29,user1,1',
'2018-04-04,user1,13',
'2018-01-05,user2,7',
'2018-06-14,user3,4',
'2018-07-02,user3,10',
'2018-03-21,user4,19',
'2018-03-22,user4,4',
'2018-04-22,user4,8',
'2018-05-03,user4,9',
'2018-05-11,user4,11',
]

# stream = [
# '2018-01-01,user100,150',
# '2018-01-07,user99,205',
# '2018-03-29,user1001,81'
# ]

users = {}
for rec in stream:
  _,user,views = rec.split(',')
  users[user] = users.get(user,0)+int(views)

avg = sum(users.values())/len(users)
print(round(avg,2))


# ---------------------------------------------------------#
# Задание 6 (необязательное)
# Необходимо у пользователя запрашивать набор чисел разделенных пробелом.
# В результате должны выводиться числа, которые повторяются в вводе более одного раза.

from collections import Counter

print('Введите числа: ')
s = str(input(''))
symbols = s.split()
counter = Counter(symbols)
doubles = {element: count for element, count in counter.items() if count > 1}
print('Результат: ')
print(' '.join(doubles.keys()))