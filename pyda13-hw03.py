# Задание 1
# Дана переменная, в которой хранится словарь, содержащий гео-метки для каждого пользователя
# (пример структуры данных приведен ниже).
# Вам необходимо написать программу, которая выведет на экран множество уникальных гео-меток всех пользователей.

ids = {'user1': [213, 213, 213, 15, 213], 'user2': [54, 54, 119, 119, 119], 'user3': [213, 98, 98, 35]}
# Результат: {98, 35, 15, 213, 54, 119}

# Variant A
uniq = list()
for codes in ids.values():
    for x in codes:
        uniq.append(x)
print(set(uniq))

# Variant B
# uniq = set()
# [uniq.update(set(x) if isinstance(x, (list, set)) else [x]) for x in ids.values()]
# print(uniq)

# ---------------------------------------------------------#
# Задание 2
# Дана переменная, в которой хранится список поисковых запросов пользователя
# (пример структуры данных приведен ниже). Вам необходимо написать программу,
# которая выведет на экран распределение количества слов в запросах в требуемом виде.
# Пример работы программы:

queries = [
'смотреть сериалы онлайн',
'новости спорта',
'афиша кино',
'курс доллара',
'сериалы этим летом',
'курс по питону',
'сериалы про спорт',
]
# Результат:
# Поисковых запросов, содержащих 2 слов(а): 42.86%
# Поисковых запросов, содержащих 3 слов(а): 57.14%
text_len = []
text_len = [len(x.split()) for x in queries]
myset = set(text_len)
print('Результат: ')

for i in myset:
    n = text_len.count(i)
    print('Поисковых запросов, содержащих', i, 'слов(а): ', "%.2f" % (n*100/len(text_len)), '%')

# ---------------------------------------------------------#
# Задание 3
# Дана переменная, в которой хранится информация о затратах и доходе рекламных кампаний по различным источникам.
# Необходимо дополнить исходную структуру показателем ROI, который рассчитаем по формуле:
# (revenue / cost - 1) * 100
# Пример работы программы:

results = {
'vk': {'revenue': 103, 'cost': 98},
'yandex': {'revenue': 179, 'cost': 153},
'facebook': {'revenue': 103, 'cost': 110},
'adwords': {'revenue': 35, 'cost': 34},
'twitter': {'revenue': 11, 'cost': 24},
}
results_s = {}
# Цикл по источникам:
for source, info in results.items():
    # Добавляем ROI
    x = (info['revenue']/info['cost'] - 1) * 100
    a = float('{:.2f}'.format(x))
    info['ROI'] = a
    # Сортируем информацию кампаний внутри одного источника
    info_sorted = {k: info[k] for k in sorted(info, key=info.get, reverse=False)}
    results_s[source] = info_sorted
#    print(info_sorted)
rs = {}
for i, s in sorted(results_s.items()):
    rs[i] = s
print('Результат:')
rs

# Результат:
# {'adwords': {'ROI': 2.94, 'cost': 34, 'revenue': 35},
# 'facebook': {'ROI': -6.36, 'cost': 110, 'revenue': 103},
# 'twitter': {'ROI': -54.17, 'cost': 24, 'revenue': 11},
# 'vk': {'ROI': 5.1, 'cost': 98, 'revenue': 103},
# 'yandex': {'ROI': 16.99, 'cost': 153, 'revenue': 179}}

# ---------------------------------------------------------#
# Задание 4
# Дана переменная, в которой хранится статистика рекламных каналов по объемам продаж
# (пример структуры данных приведен ниже).
# Напишите программу, которая возвращает название канала с максимальным объемом продаж.
# Пример работы программы:

stats = {'facebook': 55, 'yandex': 115, 'vk': 120, 'google': 99, 'email': 42, 'ok': 98}
stats_sorted = {k: stats[k] for k in sorted(stats, key=stats.get, reverse=True)}
for i, channel in enumerate(stats_sorted):
    print('Результат: Максимальный объем продаж на рекламном канале:', channel)
    break
# Результат: Максимальный объем продаж на рекламном канале: vk